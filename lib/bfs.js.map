{"version":3,"sources":["../src/bfs.js"],"names":[],"mappings":"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","file":"bfs.js","sourcesContent":["const Promise = require('bluebird')\n\nclass BFS {\n  constructor (start, getMoves, isGoal) {\n    this.start = start\n    this.getMoves = getMoves\n    this.isGoal = isGoal\n    this.visited = new Map()\n    this.visited.set(start, null)\n    this.queue = new Set()\n    this.queue.add(start)\n  }\n\n  _returnPath () {\n    const self = this\n    if (self.final === undefined) {\n      return null\n    }\n    let currentItem = self.final\n    const path = []\n    do {\n      path.splice(0, 0, currentItem)\n      currentItem = self.visited.get(currentItem)\n    } while (currentItem !== self.start)\n    path.splice(0, 0, currentItem)\n    return path\n  }\n\n  _fetchAdjutant (fromNodes, depth) {\n    return Promise\n      .resolve(this.getMoves(fromNodes, depth))\n      .tap((map) => {\n        if (typeof map !== 'object') {\n          throw new Error(`Unexpected result from getMoves.\nExpected type: Object.\nActual type: ${typeof map}, value: ${map}`)\n        }\n        if (map.size !== fromNodes.length) {\n          throw new Error(`Unexpected result from getMoves.\nExpected count: ${fromNodes.length}.\nActual count: ${map.size}`)\n        }\n      })\n  }\n\n  _checkIsGoal (fromNode, toNodes) {\n    const self = this\n    return Promise\n      .map(toNodes, (toNode) => {\n        if (toNode === null || toNode === undefined || self.visited.has(toNode)) {\n          return\n        }\n        self.visited.set(toNode, fromNode)\n        return Promise\n          .resolve(self.isGoal(toNode))\n          .then((isGoal) => {\n            if (isGoal) {\n              self.final = toNode\n              self.isDone = true\n              return\n            }\n            self.queue.add(toNode)\n          })\n      })\n  }\n\n  _processQueue (depth) {\n    const self = this\n    if (self.isDone || self.queue.size === 0) {\n      return Promise.resolve()\n    }\n\n    return Promise\n      .resolve(self._fetchAdjutant(Array.from(self.queue), depth))\n      .then((map) => {\n        self.queue.clear()\n        const promises = []\n        map.forEach((toNodes, fromNode) => {\n          promises.push(self._checkIsGoal(fromNode, toNodes, depth))\n        })\n        return Promise.all(promises)\n      })\n      .then(() => self._processQueue(depth + 1))\n  }\n\n  find () {\n    const self = this\n    return Promise\n      .resolve(self._processQueue(0))\n      .then(() => self._returnPath())\n  }\n}\n\nmodule.exports = BFS\n"]}